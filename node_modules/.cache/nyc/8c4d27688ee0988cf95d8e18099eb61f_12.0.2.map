{"version":3,"sources":["test.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","should","require","expect","supertest","api","describe","it","done","get","post","set","send","name","content","end","err","res","body","to","equal","not","created_at","put"],"mappings":"AAAA;;;;AAEA,IAAIA,UAAU,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,SAAOA,OAAOC,QAAd,MAA2B,QAA3D,GAAsE,UAAUC,GAAV,EAAe;AAAE,kBAAcA,GAAd,0CAAcA,GAAd;AAAoB,CAA3G,GAA8G,UAAUA,GAAV,EAAe;AAAE,WAAOA,OAAO,OAAOF,MAAP,KAAkB,UAAzB,IAAuCE,IAAIC,WAAJ,KAAoBH,MAA3D,IAAqEE,QAAQF,OAAOI,SAApF,GAAgG,QAAhG,UAAkHF,GAAlH,0CAAkHA,GAAlH,CAAP;AAA+H,CAA5Q;;AAEA,IAAIG,SAASC,QAAQ,MAAR,EAAgBD,MAAhB,EAAb;AACA,IAAIE,SAASD,QAAQ,MAAR,EAAgBC,MAA7B;AACA,IAAIC,YAAYF,QAAQ,WAAR,CAAhB;AACA,IAAIG,MAAMD,UAAU,8BAAV,CAAV;;AAEA;AACAE,SAAS,4BAAT,EAAuC,YAAY;AAC/CC,OAAG,iCAAH,EAAsC,UAAUC,IAAV,EAAgB;AAClDH,YAAII,GAAJ,CAAQ,YAAR,EAAsBN,MAAtB,CAA6B,GAA7B,EAAkCK,IAAlC;AACH,KAFD;AAGAD,OAAG,iCAAH,EAAsC,UAAUC,IAAV,EAAgB;AAClDH,YAAII,GAAJ,CAAQ,kBAAR,EAA4BN,MAA5B,CAAmC,GAAnC,EAAwCK,IAAxC;AACH,KAFD;AAGH,CAPD;;AASA;AACAF,SAAS,kBAAT,EAA6B,YAAY;;AAErCC,OAAG,4BAAH,EAAiC,UAAUC,IAAV,EAAgB;AAC7CH,YAAIK,IAAJ,CAAS,UAAT,EAAqBC,GAArB,CAAyB,QAAzB,EAAmC,mCAAnC,EAAwEC,IAAxE,CAA6E;AACzEC,kBAAM,YADmE;AAEzEC,qBAAS;;AAFgE,SAA7E,EAIGX,MAJH,CAIU,cAJV,EAI0B,MAJ1B,EAIkCA,MAJlC,CAIyC,GAJzC,EAI8CY,GAJ9C,CAIkD,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClET,iBAAKQ,GAAL;AACH,SAND;AAOH,KARD;;AAUAT,OAAG,8BAAH,EAAmC,UAAUC,IAAV,EAAgB;AAC/CH,YAAIK,IAAJ,CAAS,UAAT,EAAqBC,GAArB,CAAyB,QAAzB,EAAmC,mCAAnC,EAAwEC,IAAxE,CAA6E;AACzEC,kBAAM,aADmE;AAEzEC,qBAAS;;AAFgE,SAA7E,EAIGX,MAJH,CAIU,cAJV,EAI0B,MAJ1B,EAIkCA,MAJlC,CAIyC,GAJzC,EAI8CY,GAJ9C,CAIkD,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClET,iBAAKQ,GAAL;AACH,SAND;AAOH,KARD;;AAUAT,OAAG,kEAAH,EAAuE,UAAUC,IAAV,EAAgB;AACnFH,YAAIK,IAAJ,CAAS,UAAT,EAAqBC,GAArB,CAAyB,QAAzB,EAAmC,mCAAnC,EAAwEC,IAAxE,CAA6E;;AAEzEE,qBAAS;;AAFgE,SAA7E,EAIGX,MAJH,CAIU,cAJV,EAI0B,MAJ1B,EAIkCA,MAJlC,CAIyC,GAJzC,EAI8CY,GAJ9C,CAIkD,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClET,iBAAKQ,GAAL;AACH,SAND;AAOH,KARD;AASH,CA/BD;;AAiCA;AACAV,SAAS,iBAAT,EAA4B,YAAY;;AAEpCC,OAAG,sCAAH,EAA2C,UAAUC,IAAV,EAAgB;AACvDH,YAAII,GAAJ,CAAQ,UAAR,EAAoBN,MAApB,CAA2B,cAA3B,EAA2C,MAA3C,EAAmDA,MAAnD,CAA0D,GAA1D,EAA+DY,GAA/D,CAAmE,UAAUC,GAAV,EAAeC,GAAf,EAAoB;;AAEnFT,iBAAKQ,GAAL;AACH,SAHD;AAIH,KALD;;AAOAT,OAAG,sBAAH,EAA2B,UAAUC,IAAV,EAAgB;AACvCH,YAAII,GAAJ,CAAQ,UAAR,EAAoBE,GAApB,CAAwB,QAAxB,EAAkC,kBAAlC,EAAsDR,MAAtD,CAA6D,GAA7D,EAAkEY,GAAlE,CAAsE,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACtFd,mBAAOR,QAAQsB,IAAIC,IAAZ,CAAP,EAA0BC,EAA1B,CAA6BC,KAA7B,CAAmC,QAAnC;;AAEAZ;AACH,SAJD;AAKH,KAND;AAOH,CAhBD;;AAkBA;AACAF,SAAS,cAAT,EAAyB,YAAY;;AAEjCC,OAAG,iCAAH,EAAsC,UAAUC,IAAV,EAAgB;AAClDH,YAAII,GAAJ,CAAQ,YAAR,EAAsBN,MAAtB,CAA6B,GAA7B,EAAkCK,IAAlC;AACH,KAFD;;AAIAD,OAAG,iCAAH,EAAsC,UAAUC,IAAV,EAAgB;AAClDH,YAAII,GAAJ,CAAQ,YAAR,EAAsBN,MAAtB,CAA6B,GAA7B,EAAkCK,IAAlC;AACH,KAFD;;AAIAD,OAAG,8CAAH,EAAmD,UAAUC,IAAV,EAAgB;AAC/DH,YAAII,GAAJ,CAAQ,YAAR,EAAsBN,MAAtB,CAA6B,GAA7B,EAAkCY,GAAlC,CAAsC,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACtDd,mBAAOc,IAAIC,IAAJ,CAASL,IAAhB,EAAsBM,EAAtB,CAAyBE,GAAzB,CAA6BD,KAA7B,CAAmC,IAAnC;AACAjB,mBAAOc,IAAIC,IAAJ,CAASJ,OAAhB,EAAyBK,EAAzB,CAA4BE,GAA5B,CAAgCD,KAAhC,CAAsC,IAAtC;AACAjB,mBAAOc,IAAIC,IAAJ,CAASI,UAAhB,EAA4BH,EAA5B,CAA+BE,GAA/B,CAAmCD,KAAnC,CAAyC,IAAzC;AACAZ;AACH,SALD;AAMH,KAPD;AAQH,CAlBD;;AAoBA;AACAF,SAAS,iBAAT,EAA4B,YAAY;;AAEpCC,OAAG,iCAAH,EAAsC,UAAUC,IAAV,EAAgB;AAClDH,YAAIkB,GAAJ,CAAQ,YAAR,EAAsBZ,GAAtB,CAA0B,QAA1B,EAAoC,mCAApC,EAAyEC,IAAzE,CAA8E;AAC1EC,kBAAM,qBADoE;AAE1EC,qBAAS;AAFiE,SAA9E,EAGGX,MAHH,CAGU,GAHV,EAGeY,GAHf,CAGmB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACnCd,mBAAOc,IAAIC,IAAJ,CAASL,IAAhB,EAAsBM,EAAtB,CAAyBE,GAAzB,CAA6BD,KAA7B,CAAmC,IAAnC;AACAjB,mBAAOc,IAAIC,IAAJ,CAASJ,OAAhB,EAAyBK,EAAzB,CAA4BE,GAA5B,CAAgCD,KAAhC,CAAsC,IAAtC;AACAjB,mBAAOc,IAAIC,IAAJ,CAASI,UAAhB,EAA4BH,EAA5B,CAA+BE,GAA/B,CAAmCD,KAAnC,CAAyC,IAAzC;AACAZ;AACH,SARD;AASH,KAVD;AAWH,CAbD","file":"test.js","sourceRoot":"C:/Users/SamuelPinheiro/Downloads/Udacity/MyDiary/MyDiary/src","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar should = require('chai').should();\nvar expect = require('chai').expect;\nvar supertest = require('supertest');\nvar api = supertest('http://localhost:8080/api/v1');\n\n// this test checks wrong API endpoints from MyDiary\ndescribe('Checks wrong API endpoints', function () {\n    it('it should return a 404 response', function (done) {\n        api.get('/entrieser').expect(404, done);\n    });\n    it('it should return a 404 response', function (done) {\n        api.get('/entries/entry/6').expect(404, done);\n    });\n});\n\n// this test should post a new entry into MyDiary\ndescribe('POST new entries', function () {\n\n    it('It should POST first entry', function (done) {\n        api.post('/entries').set('Accept', 'application/x-www-form-urlencoded').send({\n            name: 'First Note',\n            content: 'Building a Nodejs API'\n\n        }).expect('Content-Type', /json/).expect(201).end(function (err, res) {\n            done(err);\n        });\n    });\n\n    it(' It should POST second entry', function (done) {\n        api.post('/entries').set('Accept', 'application/x-www-form-urlencoded').send({\n            name: 'Second Note',\n            content: 'This is actually fun '\n\n        }).expect('Content-Type', /json/).expect(201).end(function (err, res) {\n            done(err);\n        });\n    });\n\n    it('It should not POST an entry without content or name of the entry', function (done) {\n        api.post('/entries').set('Accept', 'application/x-www-form-urlencoded').send({\n\n            content: 'Getting ready for a full ride at Andela '\n\n        }).expect('Content-Type', /json/).expect(400).end(function (err, res) {\n            done(err);\n        });\n    });\n});\n\n// this test should et all entries fromm MyDiary\ndescribe('GET all entries', function () {\n\n    it('it should GET all entries in MyDiary', function (done) {\n        api.get('/entries').expect('Content-Type', /json/).expect(200).end(function (err, res) {\n\n            done(err);\n        });\n    });\n\n    it('it should be objects', function (done) {\n        api.get('/entries').set('Accept', 'application/json').expect(200).end(function (err, res) {\n            expect(_typeof(res.body)).to.equal('object');\n\n            done();\n        });\n    });\n});\n\n// this test should get a new entry from MyDiary\ndescribe('GET an entry', function () {\n\n    it('it should return a 200 response', function (done) {\n        api.get('/entries/1').expect(200, done);\n    });\n\n    it('it should return a 404 response', function (done) {\n        api.get('/entries/3').expect(404, done);\n    });\n\n    it('should be an object with properties not null', function (done) {\n        api.get('/entries/1').expect(200).end(function (err, res) {\n            expect(res.body.name).to.not.equal(null);\n            expect(res.body.content).to.not.equal(null);\n            expect(res.body.created_at).to.not.equal(null);\n            done();\n        });\n    });\n});\n\n//this test should update an entry from MyDiary\ndescribe('UPDATE an entry', function () {\n\n    it('it should return a 200 response', function (done) {\n        api.put('/entries/1').set('Accept', 'application/x-www-form-urlencoded').send({\n            name: 'Second Note Updated',\n            content: 'Andela is EPIC '\n        }).expect(200).end(function (err, res) {\n            expect(res.body.name).to.not.equal(null);\n            expect(res.body.content).to.not.equal(null);\n            expect(res.body.created_at).to.not.equal(null);\n            done();\n        });\n    });\n});"]}