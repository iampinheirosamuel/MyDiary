{"version":3,"sources":["index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","express","require","app","bodyParser","use","urlencoded","extended","json","port","process","env","PORT","router","Router","req","res","next","entries","Set","route","post","today","Date","entry","body","name","content","created_at","toLocaleDateString","year","month","day","add","status","send","Response","get","size","concat","params","entry_id","put","editEntry","listen","console","log"],"mappings":"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","file":"index.js","sourceRoot":"C:/Users/SamuelPinheiro/Downloads/Udacity/MyDiary/MyDiary/src","sourcesContent":["'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// calls modules\nvar express = require('express');\nvar app = express();\nvar bodyParser = require('body-parser');\n// configure app to use body-parser\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json()); // parses json\nvar port = process.env.PORT || 8080; // set port\n\n// Routes for API\nvar router = express.Router();\n\n// middleware to use for all requests\nrouter.use(function (req, res, next) {\n    next();\n});\n\n// Set Up Routes\n// create an entry for MyDiary\nvar entries = new Set([]);\nrouter.route('/entries').post(function (req, res) {\n    var today = new Date();\n    var entry = {};\n    if (typeof req.body.name === 'string' && typeof req.body.content === 'string') {\n        entry.name = req.body.name;\n        entry.content = req.body.content;\n        entry.created_at = today.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n        entries.add(entry);\n        res.status(201).json({\n            entries: 'Entry added successfully'\n        });\n    } else {\n        return res.status(400).send({\n            Response: 'Bad Request'\n        }); // 400 Bad Request\n    }\n});\n\n// get all entries for MyDiary\nrouter.route('/entries').get(function (req, res) {\n    if (entries.size !== 0) {\n        return res.status(200).json([].concat(_toConsumableArray(entries)));\n    }\n    return res.status(400).send({\n        Response: 'Bad Request'\n    });\n});\n\n// get an entry from MyDiary\nrouter.route('/entries/:entry_id').get(function (req, res) {\n    if ([].concat(_toConsumableArray(entries))[req.params.entry_id]) {\n        return res.status(200).json({\n            entry: [].concat(_toConsumableArray(entries))[req.params.entry_id]\n        });\n    }\n    res.status(404).json({\n        Response: 'Not found'\n    });\n});\n\n// modify an entry from MyDiary\nrouter.route('/entries/:entry_id').put(function (req, res) {\n    var editEntry = [].concat(_toConsumableArray(entries))[req.params.entry_id];\n    editEntry.name = req.body.name;\n    editEntry.content = req.body.content;\n    res.json({\n        entry: editEntry\n    });\n});\n\n// Register Routes\napp.use('/api/v1', router);\n\n// Start the Server\napp.listen(port);\nconsole.log('server started at: ' + port);"]}